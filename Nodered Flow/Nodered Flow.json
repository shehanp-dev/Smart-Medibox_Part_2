[
    {
        "id": "fb51835b602807aa",
        "type": "tab",
        "label": "Dashboard Flow ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d955911bd97f794b",
        "type": "ui_gauge",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "445360c64b8aacbc",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "units",
        "format": "{{payload}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 80,
        "wires": []
    },
    {
        "id": "f5c28371e88061a7",
        "type": "ui_chart",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "445360c64b8aacbc",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9f226ef16595caa7",
        "type": "mqtt in",
        "z": "fb51835b602807aa",
        "name": "Humidity ",
        "topic": "medibox humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "e1e8f1bb1bc3b5c2",
                "9860de7626805737"
            ]
        ]
    },
    {
        "id": "e1e8f1bb1bc3b5c2",
        "type": "ui_gauge",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "49168e040e5d7c81",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "9860de7626805737",
        "type": "ui_chart",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "49168e040e5d7c81",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5373470eac2670b1",
        "type": "mqtt in",
        "z": "fb51835b602807aa",
        "name": "Light Intensity ",
        "topic": "medibox light intensity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "95b442ee137fc0cf",
                "653ca03a99f4cfd9"
            ]
        ]
    },
    {
        "id": "95b442ee137fc0cf",
        "type": "ui_gauge",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "7b239edf377bc25e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "653ca03a99f4cfd9",
        "type": "ui_chart",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "7b239edf377bc25e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 530,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7c2d99b538080f9d",
        "type": "ui_slider",
        "z": "fb51835b602807aa",
        "name": "Minimum Angle",
        "label": "Minimum Angle",
        "tooltip": "",
        "group": "d74946a3c9848ceb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": 1,
        "className": "",
        "x": 840,
        "y": 580,
        "wires": [
            [
                "82259dfeec86d0bd",
                "1b74e13b89e61667"
            ]
        ]
    },
    {
        "id": "b42c597e453298f6",
        "type": "ui_slider",
        "z": "fb51835b602807aa",
        "name": "Controlling Factor",
        "label": "Controlling Factor",
        "tooltip": "",
        "group": "d74946a3c9848ceb",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 850,
        "y": 520,
        "wires": [
            [
                "d6a09d6204e7a3b8",
                "b2eaf894c76f1333"
            ]
        ]
    },
    {
        "id": "1b74e13b89e61667",
        "type": "mqtt out",
        "z": "fb51835b602807aa",
        "name": "Offset Angle",
        "topic": "medibox theta_offset",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1130,
        "y": 580,
        "wires": []
    },
    {
        "id": "b2eaf894c76f1333",
        "type": "mqtt out",
        "z": "fb51835b602807aa",
        "name": "Controlling Factor ",
        "topic": "medibox gamma",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1150,
        "y": 520,
        "wires": []
    },
    {
        "id": "cef0432d92c90b70",
        "type": "trigger",
        "z": "fb51835b602807aa",
        "name": "Default Starting Parameters Trigger",
        "op1": "{\"minAngle\":30,\"controlFactor\":0.75,\"medicineType\":\"tablet_a\"}",
        "op2": "0",
        "op1type": "json",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 520,
        "wires": [
            [
                "6f1087d70ea8a1c1",
                "feafdd47c5352440",
                "e6f3b1bb58997d63"
            ]
        ],
        "info": "Sends degault values and triggers starting of sending angles to the medibox.\r\nThis trigger activates when the light data is ready."
    },
    {
        "id": "feafdd47c5352440",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Filter Control Factor()",
        "func": "return {payload:msg.payload[\"controlFactor\"]};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 520,
        "wires": [
            [
                "b42c597e453298f6"
            ]
        ]
    },
    {
        "id": "6f1087d70ea8a1c1",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Filter Minimum Angle()",
        "func": "return { payload: msg.payload[\"minAngle\"] };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 580,
        "wires": [
            [
                "7c2d99b538080f9d"
            ]
        ]
    },
    {
        "id": "d6a09d6204e7a3b8",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Create Control Factor Variable",
        "func": "flow.set(\"controlFactor\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 700,
        "wires": [
            [
                "38bcaab113f06ee7"
            ]
        ]
    },
    {
        "id": "82259dfeec86d0bd",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Create Minimum Angle Variable",
        "func": "flow.set(\"minAngle\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 760,
        "wires": [
            [
                "38bcaab113f06ee7"
            ]
        ]
    },
    {
        "id": "38bcaab113f06ee7",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Reset Dropdowm To Custom()",
        "func": "// Default medication preset\nlet defMedData = \n{\n    \"tablet_a\": { \"controlFactor\": 0.6, \"minAngle\": 45 },\n    \"tablet_b\": { \"controlFactor\": 0.8, \"minAngle\": 60 },\n    \"tablet_c\": { \"controlFactor\": 0.5, \"minAngle\": 35 }\n};\n\n// Retrieve current minAngle and controlFactor from flow context\nlet currentMA = flow.get(\"minAngle\");\nlet currentCF = flow.get(\"controlFactor\");\n\n// Check for exact match with each preset\nif (currentCF === defMedData[\"tablet_a\"][\"controlFactor\"] && currentMA === defMedData[\"tablet_a\"][\"minAngle\"]) {\n    return { payload: \"tablet_a\" }; // Signal preset A is active\n} else if (currentCF === defMedData[\"tablet_b\"][\"controlFactor\"] && currentMA === defMedData[\"tablet_b\"][\"minAngle\"]) {\n    return { payload: \"tablet_b\" }; // Signal preset B is active\n} else if (currentCF === defMedData[\"tablet_c\"][\"controlFactor\"] && currentMA === defMedData[\"tablet_c\"][\"minAngle\"]) {\n    return { payload: \"tablet_c\" }; // Signal preset C is active\n} else {\n    return { payload: \"custom\" }; // Signal a custom configuration\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "8f8fedd552ac4710",
        "type": "mqtt in",
        "z": "fb51835b602807aa",
        "name": "Motor angle",
        "topic": "medibox motor angle",
        "qos": "0",
        "datatype": "auto",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "defcae10d2c925d2"
            ]
        ]
    },
    {
        "id": "defcae10d2c925d2",
        "type": "ui_gauge",
        "z": "fb51835b602807aa",
        "name": "",
        "group": "b31f2a29a0e39d83",
        "order": 3,
        "width": "6",
        "height": "0",
        "gtype": "gage",
        "title": "",
        "label": "value",
        "format": "{{value | number:0}}°",
        "min": 0,
        "max": 180,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "120",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 440,
        "wires": []
    },
    {
        "id": "b012c66da024acd1",
        "type": "mqtt in",
        "z": "fb51835b602807aa",
        "name": "Temperature ",
        "topic": "medibox temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e64d2dd51638e562",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "d955911bd97f794b",
                "f5c28371e88061a7"
            ]
        ]
    },
    {
        "id": "b8bb987173b78920",
        "type": "ui_slider",
        "z": "fb51835b602807aa",
        "name": "Sampling Interval",
        "label": "Sampling Interval",
        "tooltip": "",
        "group": "7b239edf377bc25e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "d353d7f0fb285a32"
            ]
        ]
    },
    {
        "id": "e18f08101606824d",
        "type": "ui_slider",
        "z": "fb51835b602807aa",
        "name": "Sending Interval",
        "label": "Sending Interval ",
        "tooltip": "",
        "group": "7b239edf377bc25e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "50",
        "max": "300",
        "step": 1,
        "className": "",
        "x": 260,
        "y": 780,
        "wires": [
            [
                "d9cfeaa0a0135fe8"
            ]
        ]
    },
    {
        "id": "d353d7f0fb285a32",
        "type": "mqtt out",
        "z": "fb51835b602807aa",
        "name": "Sampling Interval",
        "topic": "medibox sampling interval",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c8053aee900dfa1",
        "x": 550,
        "y": 720,
        "wires": []
    },
    {
        "id": "d9cfeaa0a0135fe8",
        "type": "mqtt out",
        "z": "fb51835b602807aa",
        "name": "Sending Interval",
        "topic": "medibox sending interval",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 540,
        "y": 780,
        "wires": []
    },
    {
        "id": "e6f3b1bb58997d63",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Filter Storage Temperature()",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "23728ee46f9ef33b"
            ]
        ]
    },
    {
        "id": "23728ee46f9ef33b",
        "type": "ui_slider",
        "z": "fb51835b602807aa",
        "name": "Storage Temperature",
        "label": "Storage Temperature",
        "tooltip": "",
        "group": "d74946a3c9848ceb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "10",
        "max": "40",
        "step": 1,
        "className": "",
        "x": 860,
        "y": 640,
        "wires": [
            [
                "9a8536faee7f7153",
                "56c04545d21a169c"
            ]
        ]
    },
    {
        "id": "9a8536faee7f7153",
        "type": "function",
        "z": "fb51835b602807aa",
        "name": "Create Storage Temperature Variable ",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "38bcaab113f06ee7"
            ]
        ]
    },
    {
        "id": "56c04545d21a169c",
        "type": "mqtt out",
        "z": "fb51835b602807aa",
        "name": "Storage Temparature",
        "topic": "medibox t_med",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "your_broker_id",
        "x": 1160,
        "y": 640,
        "wires": []
    },
    {
        "id": "d8b50399c74d2c2e",
        "type": "ui_spacer",
        "z": "fb51835b602807aa",
        "name": "spacer",
        "group": "82e25f889c11cc12",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "4cf91cee81cd20b1",
        "type": "ui_spacer",
        "z": "fb51835b602807aa",
        "name": "spacer",
        "group": "82e25f889c11cc12",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "445360c64b8aacbc",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "56ecf445ac9e95b2",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "abc05d44a1b776f1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "49168e040e5d7c81",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "56ecf445ac9e95b2",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b239edf377bc25e",
        "type": "ui_group",
        "name": "Light Intensity ",
        "tab": "56ecf445ac9e95b2",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d74946a3c9848ceb",
        "type": "ui_group",
        "name": "Parameters ",
        "tab": "56ecf445ac9e95b2",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b31f2a29a0e39d83",
        "type": "ui_group",
        "name": "Servo angle",
        "tab": "56ecf445ac9e95b2",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e64d2dd51638e562",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2c8053aee900dfa1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "your_broker_id",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true
    },
    {
        "id": "82e25f889c11cc12",
        "type": "ui_group",
        "name": "Calculator",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "56ecf445ac9e95b2",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]